import React, { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { FaRocket, FaStar, FaCheckCircle, FaArrowDown } from 'react-icons/fa';
import './Hero.css';

const Hero = ({ scrollToSection }) => {
  const [particles, setParticles] = useState([]);

  useEffect(() => {
    // Create floating particles
    const newParticles = Array.from({ length: 20 }, (_, i) => ({
      id: i,
      x: Math.random() * 100,
      y: Math.random() * 100,
      size: Math.random() * 4 + 2,
      delay: Math.random() * 2,
      duration: Math.random() * 3 + 2
    }));
    setParticles(newParticles);
  }, []);

  const features = [
    { icon: <FaRocket />, text: '–®–≤–∏–¥–∫–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è' },
    { icon: <FaStar />, text: '–í–∏—Å–æ–∫–∞ —è–∫—ñ—Å—Ç—å' },
    { icon: <FaCheckCircle />, text: '–ì–∞—Ä–∞–Ω—Ç—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É' }
  ];

  return (
    <div className="hero">
      {/* Background particles */}
      <div className="particles-container">
        {particles.map((particle) => (
          <motion.div
            key={particle.id}
            className="particle"
            style={{
              left: `${particle.x}%`,
              top: `${particle.y}%`,
              width: `${particle.size}px`,
              height: `${particle.size}px`
            }}
            animate={{
              y: [-20, 20, -20],
              opacity: [0.3, 0.8, 0.3],
              scale: [1, 1.2, 1]
            }}
            transition={{
              duration: particle.duration,
              repeat: Infinity,
              delay: particle.delay
            }}
          />
        ))}
      </div>

      <div className="hero-content">
        <motion.div
          className="hero-text"
          initial={{ opacity: 0, y: 50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          <motion.h1
            className="hero-title"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
          >
            <span className="title-accent">Pix</span>
              Software
          </motion.h1>
          
          <motion.p
            className="hero-subtitle"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
          >
            –ú–∏ –Ω–∞–¥–∞—î–º–æ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω—ñ –ø–æ—Å–ª—É–≥–∏ –∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º. 
            –í–∞—à—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –≤—á–∞—Å–Ω–æ —Ç–∞ –∑ –¥–æ—Ç—Ä–∏–º–∞–Ω–Ω—è–º –≤—Å—ñ—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ñ–≤ —è–∫–æ—Å—Ç—ñ.
          </motion.p>

          <motion.div
            className="hero-features"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.8 }}
          >
            {features.map((feature, index) => (
              <motion.div
                key={index}
                className="feature-item"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <div className="feature-icon">{feature.icon}</div>
                <span className="feature-text">{feature.text}</span>
              </motion.div>
            ))}
          </motion.div>

          <motion.div
            className="hero-buttons"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1 }}
          >
            <motion.button
              className="btn-primary"
              onClick={() => scrollToSection('orders')}
              whileHover={{ scale: 1.05, boxShadow: '0 10px 30px rgba(139, 92, 246, 0.3)' }}
              whileTap={{ scale: 0.95 }}
            >
              –ó–∞–º–æ–≤–∏—Ç–∏ –ü–æ—Å–ª—É–≥—É
            </motion.button>
            
            <motion.button
              className="btn-secondary"
              onClick={() => scrollToSection('services')}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              –î—ñ–∑–Ω–∞—Ç–∏—Å—è –ë—ñ–ª—å—à–µ
            </motion.button>
          </motion.div>
        </motion.div>

        <motion.div
          className="hero-visual"
          initial={{ opacity: 0, x: 50 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.8, delay: 0.4 }}
        >
          <div className="visual-container">
            <div className="gradient-circle"></div>
            <div className="floating-card card-1">
              <div className="card-icon">üöÄ</div>
              <div className="card-text">–®–≤–∏–¥–∫–æ</div>
            </div>
            <div className="floating-card card-2">
              <div className="card-icon">‚≠ê</div>
              <div className="card-text">–Ø–∫—ñ—Å–Ω–æ</div>
            </div>
            <div className="floating-card card-3">
              <div className="card-icon">üíé</div>
              <div className="card-text">–ù–∞–¥—ñ–π–Ω–æ</div>
            </div>
          </div>
        </motion.div>
      </div>

      <motion.div
        className="scroll-indicator"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.8, delay: 1.5 }}
        onClick={() => scrollToSection('services')}
      >
        <motion.div
          className="scroll-arrow"
          animate={{ y: [0, 10, 0] }}
          transition={{ duration: 2, repeat: Infinity }}
        >
          <FaArrowDown />
        </motion.div>
        <span>–ü—Ä–æ–∫—Ä—É—Ç—ñ—Ç—å –≤–Ω–∏–∑</span>
      </motion.div>
    </div>
  );
};

export default Hero;
